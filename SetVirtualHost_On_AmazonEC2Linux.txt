/* EC2 AMI 의 default document folder for web server 는 /var/www/html */
/* /var/www/example.com 의 가상호스트용 다큐먼트 폴더 만들어주고 */
$ cd /etc/httpd/conf.d
$ sudo touch vhost.conf

/* Because this new vhost.conf file is in the conf.d directory, it will be loaded automagically when apache starts!
When you’re ready, let’s edit the file with nano… */

$ sudo nano /etc/httpd/conf.d/vhost.conf

/* 아래의 내용을 각각 default folder 와 가상폴더용 configuration으로 적어 넣는다. */
<VirtualHost *:80>
  ServerName default:80
  DocumentRoot /var/www/html
</VirtualHost>


<VirtualHost *:80>

  # REQUIRED. Set this to the host/domain/subdomain that
  # you want this VirtualHost record to handle.

  ServerName yourdomain.com

  # Optional. You can specify additional host names that
  # serve up the same site. This can be top-level, domains,
  # sub-domains, and can even use wildcard subdomains such
  # as *.yourdomain.com - just separate each host name
  # with a single space.

  #ServerAlias www.yourdomain.com yourdomain.net

  # REQUIRED. Set this to the directory you want to use for
  # this vhost site's files.

  DocumentRoot /var/www/vhosts/yourdomain.com

  # Optional. Uncomment this and set it to your admin email
  # address, if you have one. If there is a server error,
  # this is the address that Apache will show to users.

  #ServerAdmin you@example.com

  # Optional. Uncomment this if you want to specify
  # a different error log file than the default. You will
  # need to create the error file first.

  #ErrorLog /var/www/vhosts/logs/error_log

  # REQUIRED. Let's make sure that .htaccess files work on 
  # this site. Don't forget to change the file path to
  # match your DocumentRoot setting above.
  
  <Directory /var/www/vhosts/yourdomain.com>
    AllowOverride All
  </Directory>

</VirtualHost>

/*수정 했으면 EC2 다시 시작 */
$sudo service httpd restart

/* 디렉토리를 root user권한으로 만들었으니, regular user도 접근 할수 있도록 permission을 바꿔준다 */
$sudo chown -R $USER:$USER /var/www/example.com

/* We should also modify our permissions a little bit to ensure that read access is permitted to the general web directory and all of the files and folders it contains so that pages can be served correctly: */

$sudo chmod -R 755 /var/www
/* virtual host folder 안에 시작페이지 만들어준다 */
$sudo nano /var/www/example.com/index.html
<html>
  <head>
    <title>Welcome to Example.com!</title>
  </head>
  <body>
    <h1>Success!  The example.com virtual host is working!</h1>
  </body>
</html>
